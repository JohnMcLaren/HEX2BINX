{"name":"HEX2BINX","tagline":"<Intel HEX / ARM / C++ / Qt5 >","body":"# BINX\r\n_Универсальный формат файлов прошивок_\r\n***\r\n\r\nФормат прошивок **BINX** может быть интересен разработчикам устройств на микроконтроллерах, которые планируют в своих устройствах функцию обновления прошивки (**Update Firmware**), т.е. **само-программирование** микроконтроллера, в условиях:\r\n* недостаточности промежуточной памяти используемой для приёма новой прошивки\r\n* медленного либо неустойчивого канала связи с прошиваемым устройством\r\n* не желанием разработчика занимать микроконтроллер разбором HEX формата\r\n\r\nПо сути, **BINX** является бинарным представлением обычного HEX файла прошивки стандарта **Intel HEX**, он передаётся устройству “**как есть**”.\r\n\r\nЛично для меня необходимость в данном формате возникла когда потребовалось **полное** размещение новой прошивки в оперативной памяти микроконтроллера STM32F103 (SRAM = 20 kB), при само-программировании. HEX формат в силу своего текстового представления просто не смог бы разместиться физически. В общем случае объём **BINX** файла получается **в три раза** меньше **HEX** файла одной и той же прошивки.\r\n\r\nИтак, BINX файл в является массивом BINX блоков. BINX блок - это структура которая содержит данные для записи и необходимую техническую информацию для произведения записи данных. Эта структура состоит из 4 полей.\r\n* **Первое** поле размером 4 байта содержит общий размер структуры/блока в байтах. \r\n* **Второе** поле, также размером 4 байта, содержит адрес по которому будет произведена запись данных в ROM устройства. \r\n* **Третье** поле переменной произвольной длинны и ограничено только допустимой длиной данных в блоке (4 294 967 285 байт) содержит непосредственно данные которые будут записаны по адресу указанному во втором поле структуры. \r\n* **Четвёртое** поле, размером 2 байта, является контрольной суммой CRC16 предыдущих трёх полей структуры.\r\n* **Заканчивается** BINX файл BINX блоком длиной 4 байта в котором присутствует только первое поле указывающее на нулевой размер блока.\r\n\r\nВсе поля структуры имеют порядок байт соответствующий формату **Intel** - _Little-Endian_.\r\n\r\n#### Структура BINX файла\r\n\r\n![BINX_struct](https://raw.githubusercontent.com/JohnMcLaren/HEX2BINX/master/img/BINX_struct.png)\r\n\r\n#### Признаки BINX файла.\r\n\r\nПоскольку в заголовке BINX файла нет маркера явно указывающего на то что файл содержит структуры BINX формата, для определения используются следующие признаки (от простого к сложному):\r\n\r\n1. Файл заканчивается четырьмя байтами ‘00 00 00 00’\r\n1. Сумма указанных в заголовках BINX блоков длин блоков равна размеру файла\r\n1. Все контрольные суммы CRC16 BINX блоков корректны\r\n\r\n#### Скриншот конвертера HEX2BINX\r\n\r\n![hex2binx_screenshot](https://raw.githubusercontent.com/JohnMcLaren/HEX2BINX/master/img/hex2binx_screenshot.png)\r\n","google":"UA-58686535-3","note":"Don't delete this file! It's used internally to help with page regeneration."}